name: Run autotests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: select tests to run
        required: true
        type: choice
        default: all
        options:
          - all
  repository_dispatch:
    types: [run-tests]  # <-- для запуска через API

env:
  OWNER: kirillqqqq
  REPO: test_demo_web_shop
  
permissions:
  contents: write  
  pages: write    
  id-token: write
  
jobs:
  run-tests:
    runs-on: windows-latest
    name: Run tests and push Allure report

    steps:
      - name: Checkout source branch
        uses: actions/checkout@v4
      - name: Identity
        run: |
          git config --global user.email "kirill.afanasiev.r@gmail.com"
          git config --global user.name "Kirill Afanasev"

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21.0.2'
          distribution: 'microsoft'

      - name: Install allure
        run: |
          iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
          scoop install allure

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with Allure
        run: pytest --alluredir allure-results -n 2 --reruns 1 --reruns-delay 5

      - name: Store allure results

      - name: Generate allure report
        run: ~\scoop\apps\allure\2.33.0\bin\allure.bat allure generate -c allure-results -o _site
        if: always()
        
      - name: Configure Git for GitHub
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Push Allure report to gh-pages
        run: |
          git fetch
          git checkout gh-pages || git checkout -b gh-pages origin/gh-pages
          Copy-Item -Recurse -Force allure-report/* .
          git add .
          git commit -m "Add new Allure report" || echo "No changes to commit"
          git pull --rebase origin gh-pages
          git push origin gh-pages
        if: always()
